:root {
  --ff-sans: sans-serif;
  --ff-serif: serif;

  --fs-8: 0.5rem;
  --fs-12: 0.75rem;
  --fs-14: 0.875rem;
  --fs-16: 1rem;
  --fs-18: 1.125rem;
  --fs-20: 1.25rem;
  --fs-22: 1.1.25rem;
  --fs-24: 1.5rem;
  --fs-28: 1.75rem;
  --fs-32: 2rem;
  --fs-36: 2rem;

  --spacing-8: 0.5rem;
  --spacing-16: 1rem;
  --spacing-24: 1.5rem;
  --spacing-32: 2rem;
  --spacing-40: 2.5rem;
  --spacing-48: 3rem;
  --spacing-56: 3.5rem;
  --spacing-64: 4rem;
  --spacing-80: 5rem;
  --spacing-130: 8.125rem;

  --fw-400: 400;
  --fw-700: 700;

  --borr-circle: 100vh;
  --borr: 0.5rem;

  --box-shadow-primary: 0 8px 4px #0000001f;
  --box-shadow-secondary: 0 0 2px #0000003d;

  /* hsl */
  --clr-primary-400: orangered;
  --clr-secondary-400: white;
  --clr-neutral-100: #fff;
  --clr-neutral-400: #d3d3d3;

  --clr-correct: green;
  --clr-incorrect: red;
  --clr-unanswered: var(--clr-neutral-400);

  --clr-overlay: rgba(0, 0, 0, 0.87);
}

/* resets */
*,
*::before,
*::after {
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}

ul,
ol {
  list-style: none;
}

html:focus-within {
  scroll-behavior: smooth;
}

a:not([class]) {
  text-decoration-skip-ink: auto;
}

a {
  color: currentColor;
  text-decoration: none;
  &:hover {
    cursor: pointer;
  }
}

img,
picture {
  max-width: 100%;
  display: block;
}

input,
button,
textarea,
select {
  font: inherit;
}

button {
  &:hover {
    cursor: pointer;
  }
}

h1,
h2,
h3,
h4,
h5,
h6 {
  line-height: 1.1;
  text-wrap: balance;
}

p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}

p {
  text-wrap: pretty;
}

@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

body {
  text-rendering: optimizeSpeed;
}


/* utils */
.sr-only {
  clip: rect(0 0 0 0);
  clip-path: inset(50%);
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;

  pointer-events: none;
  visibility: hidden;
}

.hidden {
  display: none;
}

.d-none {
  display: none;
}

.mx-auto {
  margin-inline: auto;
}

.text-center {
  text-align: center;
}

.upper {
  text-transform: uppercase;
}

.fw-700 {
  font-weight: var(--fw-700);
}

.flow > * + * {
  margin-top: var(--flow-space, 1rem);
}

.split {
  display: flex;
  gap: var(--split-space, 1rem);
}

.container {
  max-width: min(calc(100% - 2rem), 996px);
  margin-inline: auto;
}

.p-block {
  padding-block: 1.5rem;

  @media (width > 48em) {
    padding-block: 3.5em;
  }
}

/* base */
a {
  text-decoration: underline;

  &:hover {
    text-decoration: none;
  }
}

.main-layout {
  min-height: 100vh;
  min-height: 100dvh;
  display: grid;
  grid-template-rows:
    auto
    1fr
    auto;
}

.error-message {
  color: red;
}

/* nav */
:is(nav, footer) {
  background-color: purple;
  padding-block: 2rem;

  @media (width > 48em) {
    padding-block: 2.25rem;
  }
}

nav {
  li:last-of-type {
    margin-left: auto;
  }
}

footer {
  font-size: var(--fs-14);
}


/* flashcard results */
.flashcard-results {
  --flow-space: 1.5rem;

  header {
    display: flex;
    justify-content: space-between;
    align-items: center;

    h1 {
      font-size: var(--fs-28);
      @media (width > 48em) {
        font-size: var(--fs-36);
      }
    }
  }

  .wrapper {
    --flow-space: 1.25rem;
  }

  .practice-link {
    display: inline-block;
    text-decoration-color: var(--main-theme, black);
    text-decoration-thickness: 3px;

    &:hover {
      color: var(--main-theme);
    }
  }

  .unanswered {
    --main-theme: var(--clr-unanswered);
  }

  .correct {
    --main-theme: var(--clr-correct);
  }

  .incorrect {
    --main-theme: var(--clr-incorrect);
  }
}


.bg-glass {
  background: rgba(255, 255, 255, 0.65);
  backdrop-filter: blur(11.8px);
  -webkit-backdrop-filter: blur(11.8px);
}

/* _result_flashcard */
.result-flashcard {
  --border-width: 1px;
  --border-color: black;

  display: flex;
  text-align: center;
  border: var(--border-width, 1px) solid var(--border-color, black);


  & > * {
    flex: 1;
  }

  .side-wrapper {
    block-size: 200px;
    align-content: center;
    position: relative;
    overflow: hidden;


    @media (width > 48em) {
      block-size: 300px;
    }

    &:first-of-type {
      border-inline-end: var(--border-width, 1px) solid  var(--border-color, black);
    }
  }

  video {
    inline-size: 100%;
    block-size: 100%;
    object-fit: cover;
    object-position: center;
    display: block;
  }

  p {
    font-size: var(--fs-16);
    padding: 1rem;
    @media (width > 48em) {
      font-size: var(--fs-20);
    }
  }

  &.correct {
    border-inline-start: 8px solid var(--clr-correct);
  }

  &.incorrect {
    border-inline-start: 8px solid var(--clr-incorrect);
  }

  &.unanswered {
    border-inline-start: 8px solid var(--clr-unanswered);
  }
}


.result-flashcard-image-wrapper {
  overflow-block: auto;

  img {
    inline-size: 100%;
    height: auto;
    object-fit: contain;
    
  }

  p  {
    position: absolute;
    inset-block-end: 0;
    inset-inline: 0;
  }
}


/* flashcard practice */
.practice-flashcards-wrapper {
  .icon {
    block-size: 24px;
    inline-size: 24px;
  }

  .flashcard-practice-btn {
    border: none;
    width: 40px;
    height: 40px;
    border-radius: var(--borr-circle);
    align-content: center;
    background: rgba(255, 255, 255, 0.56);
    backdrop-filter: blur(11.8px);
    -webkit-backdrop-filter: blur(11.8px);
  }
}

.practice-flashcards-slider {
  position: relative;
  margin-inline: auto;
  display: flex;
  max-inline-size: 350px;
  overflow-x: hidden;

  & > * {
    flex: 0 0 350px;
  }
}

.slider-btn {
  position: absolute;
  inset-block-start: 50%;
  align-content: center;

  &.hidden {
    display: none;
  }

  &.left {
    inset-inline-start: 2.65rem;
    translate: -100% -100%;
  }

  &.right {
    inset-inline-end: 2.75rem;
    translate: 100% -100%;
  }
}

.practice-flashcard-container {
  height: 450px;
  width: 350px;
  padding: 1rem;
  translate: calc(-100% * var(--counter, 0));
  transition: translate 0.4s ease-in-out var(--delay, 0);

  .split {
    position: absolute;
  }
}

/* flashcard sentences */
.sentences-list {
  --flow-space: 0.75rem;
  background-color: transparent;
  text-align: left;
  font-size: 0.875rem;
  padding: 1.25rem 2rem;
  max-block-size: 250px;
  overflow-y: auto;
  position: relative;

  .sentence-item {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }

  .author {
    font-size: 0.75rem;
    text-transform: capitalize;
  }

  .sound-button {
    border: 1px solid black;
    &:hover {
      cursor: pointer;
    }
  }
}

.practice-flashcard {
  --card-buttons-bottom-spacing: 3rem;
  inset-block-start: 0;
  inset-inline-start: 0;
  inline-size: 100%;
  block-size: 100%;
  border-radius: 10px;
  transform-style: preserve-3d;
  transition: all 0.8s ease;
  transform: rotateY(0deg);

  .front,
  .back {
    isolation: isolate;
    overflow: hidden;
    position: absolute;
    text-align: center;
    align-content: center;
    background: #fafafa;
    color: #333;
    backface-visibility: hidden;
    inset-block-start: 0;
    inset-inline-start: 0;
    block-size: 100%;
    inline-size: 100%;
  }

  .back-inner {
    video {
      width: 100%;
      height: 100%;
      object-fit: cover;
      transform: translateZ(0);
      will-change: transform;
      position: relative;
      z-index: 1;
    }
  }

  .front {
    transform: rotateY(0deg);
  }

  .back {
    transform: rotateY(180deg);
  }

  .front:has(.sentences-list),
  .back:has(.senteces-list) {
    z-index: 2;
  }

  .score-buttons {
    inset-block-end: var(--card-buttons-bottom-spacing);
    position: absolute;
    overflow: hidden;
    inset-inline: 0;
    z-index: 3;
    margin-inline: var(--spacing-80);
    .correct-btn {
      transition: translate 0.5s ease;
      translate: 100%;
    }

    .incorrect-btn {
      transition: translate 0.5s ease;
      translate: -100%;
    }

    .wrapper {
      transition: translate 0.5s ease;
      translate: 0 100%;
      padding-block: 0.5rem;

      display: flex;
      align-items: center;
      justify-content: center;
      gap: 2.5rem;
    }
  }

  .rotate-btn-wrapper {
    block-size: var(--card-buttons-bottom-spacing);
    position: absolute;
    inset-block-end: 0rem;
    inset-inline: 0;
    align-content: center;
    position: absolute;
    z-index: 100;

    &:hover {
      cursor: pointer;
    }
  }

  &.rotated {
    transform: rotateY(180deg);

    .score-buttons {
      transform: rotateY(180deg);
    }

    .wrapper {
      translate: 0 0;
    }

    .correct-btn {
      translate: 0;
    }

    .incorrect-btn {
      translate: 0;
    }
  }

  &.inversed {
    transform: rotateY(0deg);

    &.rotated {
      transform: rotateY(180deg);
    }

    .front {
      transform: rotateY(180deg);
    }

    .back {
      transform: rotateY(0deg);
    }
  }
}

.scored {
  --border-thickness: 0.75rem;
  --border-color: var(--color-accent, hotpink);
  position: relative;
  padding: 20px;
  text-align: center;
  text-decoration: none;
  color: #222;

  &::before {
    content: "";
    position: absolute;
    width: calc(100% + var(--border-thickness));
    height: calc(100% + var(--border-thickness));

    inset-block-start: calc(-1 * var(--border-thickness) / 2);
    inset-inline-start: calc(-1 * var(--border-thickness) / 2);

    background: linear-gradient(
        to right,
        var(--border-color) 0%,
        var(--border-color) 100%
      ),
      linear-gradient(to top, var(--border-color) 50%, transparent 50%),
      linear-gradient(to top, var(--border-color) 50%, transparent 50%),
      linear-gradient(
        to right,
        var(--border-color) 0%,
        var(--border-color) 100%
      ),
      linear-gradient(to left, var(--border-color) 0%, var(--border-color) 100%);
    background-size: 100% calc(var(--border-thickness) / 2),
      /* bottom */ calc(var(--border-thickness) / 2) 200%,
      /* left */ calc(var(--border-thickness) / 2) 200%,
      /* right */ 0% calc(var(--border-thickness) / 2),
      /* top-right */ 0% calc(var(--border-thickness) / 2); /* top-left */
    background-position: 50% 100%, /* bottom */ 0% 0%, /* left */ 100% 0%,
      /* right */ 100% 0%, /* top-right */ 0% 0%; /* top-left */
    background-repeat: no-repeat;
    transition: transform 0.3s ease-in-out, background-position 0.3s ease-in-out,
      background-size 0.3s ease-in-out;
    transform: scaleX(0);
    transition-delay: 0.6s, 0.3s, 0s;
  }

  /* &::before { */
  &.active::before {
    background-size: 200% calc(var(--border-thickness) / 2),
      /* bottom */ calc(var(--border-thickness) / 2) 400%,
      /* left */ calc(var(--border-thickness) / 2) 400%,
      /* right */ 55% calc(var(--border-thickness) / 2),
      /* top-right */ 55% calc(var(--border-thickness) / 2); /* top-left */
    background-position: 50% 100%, /* bottom */ 0% 100%, /* left */ 100% 100%,
      /* right */ 100% 0%, /* top-right */ 0% 0%; /* top-left */
    transform: scaleX(1);
    transition-delay: 0s, 0.3s, 0.6s;
  }

  &.correct,
  &.incorrect {
    pointer-events: none;
  }

  &.correct {
    --border-color: var(--color-success, green);
  }

  &.incorrect {
    --border-color: var(--color-danger, red);
  }
}

/* decks-column component */
.decks-column {
  .decks-wrapper {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 1rem;
  }

  .deck {
    border: 2px solid black;
    padding: 2rem;
  }

  .links {
    display: flex;
    gap: 1em;
  }
}

/* deck creation form */
.selection-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 0.5rem;

  .img {
    inline-size: 100%;
    block-size: 100%;
    object-fit: fill;
    object-position: center;
    aspect-ratio: 1 / 1;
  }

  &:has(.image-field input:checked) .image-field:not(:has(input:checked)) {
    display: none;
  }

  .image-field {
    position: relative;

    &:has(input[type="radio"]:checked) {
      border: 2px solid var(--clr-accent, green);
      z-index: 10;
      display: block;
      scale: 1;
      inline-size: clamp(100px, 10vw + 1rem, 200px);
      block-size: clamp(100px, 10vw + 1rem, 200px);

      p {
        position: absolute;
        inset-inline-start: calc(100% + 18px);
        inset-block: 0;

        align-content: center;
      }
    }

    &:hover {
      scale: 1.25;
      z-index: 10;
      cursor: pointer;
    }

    .img-radio-btn {
      position: absolute;
      z-index: -1;
      inset-block-start: 0;
    }
  }
}

.bg-white {
  background-color: #fff;
}


.deck-create-form {
  --flow-space: 0.75rem;
  max-inline-size: 600px;
  margin-inline: auto;

    
  .preview-flashcard-image {
    inline-size: clamp(100px, 10vw + 1rem, 200px);
    block-size: clamp(100px, 10vw + 1rem, 200px);
  }

  .split {
    inline-size: 100%;
    align-items: center;
  }

  :is(input, select) {
    padding: 0.5rem 1.25rem;
    border-radius: 50vh;
    border: 1px solid navy;
    inline-size: 100%;
  }

  select {
    border-radius: 0.25rem;
  }

  label {
    display: block;
    margin-bottom: 0.35rem;
  }
}

/* components */

/* button */
.button {
  display: inline-flex;
  justify-content: center;
  cursor: pointer;
  text-decoration: none;
  line-height: 1;
  font-size: 1rem;
  text-transform: none;
  font-weight: 400;
  padding-inline: 1.25em;
  padding-block: 0.5em;
  border: 2px solid black;
  border-radius: 2rem;
  transition: 275ms ease;

  &.d-none {
    display: none;
  }

  &[data-type="accent"] {
    background-color: var(--button-accent-bg);
    color: var(--button-accent-color);

    &:is(:hover, :focus) {
      background-color: var(--button-accent-active-bg);
      color:  var(--button-accent-active-color);
    }
  }

  &[data-type="primary"] {
    background-color: var(--button-primary-bg);
    color: var(--button-primary-color);

    &:is(:hover, :focus) {
      background-color: var(--button-primary-active-bg);
      color:  var(--button-primary-active-color);
    }
  }
}

/* loading spinner */
.loading-spinner {
  inline-size: 48px;
  block-size: 48px;
  border: 5px solid #ddd;
  border-block-end-color: transparent;
  border-radius: 50%;
  display: block;
  animation: rotation 1s linear infinite;
  margin-inline: auto;
}

@keyframes rotation {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}


